name: Version Bump

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  bump:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Configure Git
        run: |
          git config user.name "Vincent Seitlhamo"
          git config user.email "vincentseitlhamo@gmail.com"

      - name: Use GITHUB_TOKEN for pushing
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://${GH_TOKEN}@github.com/${{ github.repository }}.git
          git fetch --tags origin
          git pull --rebase origin main

      - name: Ensure clean working tree
        run: |
          git reset --hard HEAD
          git clean -fdx

      - name: Bump version and create tag (manual, no npm)
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT"
          NEW=$(node -e "const v=process.argv[1].split('.').map(Number); v[2]++; process.stdout.write(v.join('.'))" "$CURRENT")
          echo "New version: $NEW"
          node -e "const fs=require('fs'); const p=JSON.parse(fs.readFileSync('package.json','utf8')); p.version=process.env.NEW_VERSION; fs.writeFileSync('package.json', JSON.stringify(p, null, 2)+'\n')"
          git add package.json
          git commit -m "chore(release): v$NEW [skip ci]" || echo "Nothing to commit"
          git tag v$NEW
        env:
          NEW_VERSION: ${{ steps.setver.outputs.new }}

      - name: Push changes and tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main --follow-tags

